1
00:00:01,024 --> 00:00:03,028
next we'll talk about the environment

2
00:00:03,028 --> 00:00:06,116
diagrams so environment diagrams

3
00:00:07,016 --> 00:00:12,020
are away for of to keep track of what's
going on

4
00:00:12,002 --> 00:00:17,021
within the Python interpreter when it
executes program we picked

5
00:00:17,039 --> 00:00:20,093
and myron surreal pics for their

6
00:00:20,093 --> 00:00:24,442
way in which an interpreter for
programming language

7
00:00:25,279 --> 00:00:29,580
keeps track what names me so it sort of
memory

8
00:00:29,058 --> 00:00:32,097
that keeps track the findings between

9
00:00:32,619 --> 00:00:35,890
names and values so

10
00:00:35,089 --> 00:00:38,137
we're gonna drop pictures with a look
and

11
00:00:39,037 --> 00:00:43,044
this will help you become a better
computer scientist lots

12
00:00:43,044 --> 00:00:48,075
oh what computer scientists do is drop
pictures that involve boxes

13
00:00:48,075 --> 00:00:52,161
and arrows pointing to other boxes it's
just a huge part of the display

14
00:00:53,061 --> 00:00:57,100
you might as well start now ok it's own
environment Bagram

15
00:00:58,000 --> 00:01:01,003
is there to visualize the interpreters
process

16
00:01:01,003 --> 00:01:04,035
so I can really understand how programs
get executed

17
00:01:04,035 --> 00:01:08,114
and they looked like this you have some
code on the left

18
00:01:09,014 --> 00:01:12,015
and then you have some frames on the
right

19
00:01:12,024 --> 00:01:15,943
and the code is regular price on coding

20
00:01:16,159 --> 00:01:20,130
with some arrows to indicate where we
are in the process of execution

21
00:01:20,013 --> 00:01:23,085
and the frames keep track of the
bindings between ames and valleys

22
00:01:23,085 --> 00:01:26,114
okay the code on the left the frames are
on the right

23
00:01:27,014 --> 00:01:32,313
within the code their statements and
expressions so i cn import statements

24
00:01:32,439 --> 00:01:33,496
and an assignment statement here

25
00:01:34,009 --> 00:01:38,290
the arrows indicate the evaluation order

26
00:01:38,029 --> 00:01:41,085
so that gray ones has this was just
executed

27
00:01:41,085 --> 00:01:44,097
and the red one says this is next to
execute

28
00:01:44,097 --> 00:01:47,996
it hasn't happened yet okay frames on
the right

29
00:01:48,869 --> 00:01:53,110
show bindings between ames high as a
name

30
00:01:53,011 --> 00:01:56,106
and values there's a name there's a
value

31
00:01:57,006 --> 00:02:00,064
within a frame is usually important

32
00:02:00,064 --> 00:02:03,223
this is part of the Python process
within a frame

33
00:02:03,799 --> 00:02:07,807
and name cannot be repeated it has to be
bound two at most one

34
00:02:08,599 --> 00:02:11,950
value we saw the consequences that this
only

35
00:02:11,095 --> 00:02:15,494
rebounded in a max to a new number
instead of the original function

36
00:02:16,349 --> 00:02:19,690
now on binding was lost okay

37
00:02:19,069 --> 00:02:22,080
those are code on the left frames on the
right

38
00:02:22,008 --> 00:02:26,056
an environment Bagram these are going to
get more complicated in

39
00:02:27,028 --> 00:02:31,064
but also more necessary because when
there are lots of names

40
00:02:31,064 --> 00:02:35,083
repeated in various ways only to be able
to keep track of what they really mean

41
00:02:35,083 --> 00:02:38,120
these things get drawn for you

42
00:02:39,002 --> 00:02:42,016
automatic so here's the web

43
00:02:42,034 --> 00:02:45,047
interfaith what's called the online
patient tutor

44
00:02:45,047 --> 00:02:49,125
on so here's the code would have been
from math import pine

45
00:02:50,025 --> 00:02:53,112
can edit this and you'd quick visualize
execution

46
00:02:54,012 --> 00:02:58,012
and you get your coat on your left and
your friends on the right

47
00:02:58,012 --> 00:03:02,070
and as you walk through each line of
code by pressing forward

48
00:03:02,007 --> 00:03:05,796
you see the consequences and executing
for this important statement

49
00:03:06,489 --> 00:03:10,650
found the name hi to its value and the
next thing that happened

50
00:03:10,065 --> 00:03:13,122
the assignment statement found the name
how through times

51
00:03:14,022 --> 00:03:19,081
pack and here's the result at the end so
when you're confused about where program

52
00:03:19,081 --> 00:03:19,139
both

53
00:03:20,039 --> 00:03:23,918
he's did in to the online part on

54
00:03:24,269 --> 00:03:29,010
tutor and it will show you exactly what
happened throughout the course of

55
00:03:29,001 --> 00:03:29,086
execution

56
00:03:29,086 --> 00:03:34,165
that's the whole point okay so that's
what an environment Bagram looks like

57
00:03:35,065 --> 00:03:39,108
now we can talk about exactly what
assignment statements to

58
00:03:40,008 --> 00:03:43,727
they change the findings between names
and values frames

59
00:03:43,799 --> 00:03:46,840
so here is

60
00:03:46,084 --> 00:03:49,089
there's an environment diagram

61
00:03:49,089 --> 00:03:54,143
for three lines of coke just executed
with be

62
00:03:55,043 --> 00:03:58,742
through next to execute is

63
00:03:59,129 --> 00:04:03,470
larger assignment statement as two names
on the left and two expressions on the

64
00:04:03,047 --> 00:04:03,426
right

65
00:04:03,849 --> 00:04:06,896
now there is an execution rule

66
00:04:07,319 --> 00:04:10,580
for assignment statements that you need
to understand

67
00:04:10,058 --> 00:04:13,357
because Python always does the same
thing over and over again

68
00:04:13,879 --> 00:04:17,780
and here's what it does for assignment
statements and evaluates all the

69
00:04:17,078 --> 00:04:17,787
expressions

70
00:04:18,489 --> 00:04:23,600
to the right equals from left to right
then

71
00:04:23,006 --> 00:04:27,059
after about winning all those
expressions it binds all the names

72
00:04:28,013 --> 00:04:31,082
to the left to be both to the resulting
values

73
00:04:31,199 --> 00:04:36,290
so in this case your own the expressions
to the right equals

74
00:04:36,029 --> 00:04:40,056
get a plus be which evaluates to

75
00:04:40,056 --> 00:04:43,069
one close to his three the virus 23

76
00:04:43,069 --> 00:04:46,111
be evaluates the two and then

77
00:04:47,011 --> 00:04:50,102
second step find all names to the left
equals to the resulting values

78
00:04:51,002 --> 00:04:54,008
so be will be bound 3 and a

79
00:04:54,062 --> 00:04:58,421
will be rounded to value that expression

80
00:04:58,979 --> 00:05:03,900
ok it's over it forward and the
environment diagram generator

81
00:05:03,009 --> 00:05:06,032
the just executed a room well now be

82
00:05:07,013 --> 00:05:10,027
online 3 and the global frame

83
00:05:10,027 --> 00:05:17,027
well have a bounded to and be bound
three

84
00:05:20,006 --> 00:05:25,675
are for now we can do the complicated
case that I ask yourself by urself

85
00:05:25,729 --> 00:05:28,830
I'll let's just do it life

86
00:05:28,083 --> 00:05:31,136
and that pipe onto your okay so here is
the question

87
00:05:32,036 --> 00:05:35,084
what happens I think epic was mean
people's max than GH

88
00:05:35,084 --> 00:05:38,253
was min/max and Mexico's G then

89
00:05:39,009 --> 00:05:43,370
this large nested call expression

90
00:05:43,037 --> 00:05:46,041
let's watch and see what happens the
first thing that happened

91
00:05:46,077 --> 00:05:49,121
F is bound to me this is the main
function

92
00:05:50,021 --> 00:05:53,700
representation in the environment
diagram and similar to

93
00:05:53,889 --> 00:05:57,100
the angle bracket thing that you saw
when Python

94
00:05:57,001 --> 00:06:00,022
up printed it out

95
00:06:00,031 --> 00:06:04,034
then we find f2 max now remember the
rule

96
00:06:04,061 --> 00:06:07,086
that the name can be bound to at most
one value

97
00:06:07,086 --> 00:06:10,086
and a friend so since

98
00:06:10,086 --> 00:06:13,109
we rebound after max we've lost the
binding between

99
00:06:14,009 --> 00:06:17,648
F and me that's just got

100
00:06:17,729 --> 00:06:20,930
okay now we say GNH around 10 min and
max

101
00:06:20,093 --> 00:06:23,802
we evaluate min as the main function we
evaluate max

102
00:06:24,639 --> 00:06:27,707
that's the max function and we find she
and age

103
00:06:28,319 --> 00:06:32,407
10 min and max because there's only one
min function is only one max function

104
00:06:33,199 --> 00:06:36,202
but the max function now has two names
FNH

105
00:06:36,229 --> 00:06:39,320
the main function happening G now
there's also the name max

106
00:06:40,139 --> 00:06:43,145
for the max function in a min for the
main function

107
00:06:43,199 --> 00:06:46,277
other built-in and they're part of a
global frame but we don't write them

108
00:06:46,979 --> 00:06:47,610
down

109
00:06:47,061 --> 00:06:50,550
because we had to write down all the
buildings than that would take up too

110
00:06:51,099 --> 00:06:51,174
much space

111
00:06:51,849 --> 00:06:55,650
well they write them down when they
change which is about to be what happens

112
00:06:55,065 --> 00:06:58,159
so the next day mexico's G using the
execution rule

113
00:06:59,059 --> 00:07:02,608
for assignment statements we first
evaluate G

114
00:07:03,139 --> 00:07:07,160
G evaluates to the main function now we
find the name max

115
00:07:07,016 --> 00:07:13,021
that about you so now max means mid

116
00:07:13,021 --> 00:07:17,093
jeepers that is complicated in okay so
then with a maximum past

117
00:07:17,093 --> 00:07:21,232
2g major 15 3&4

118
00:07:22,069 --> 00:07:27,770
and that involves evaluating all these
different operand expression Center

119
00:07:27,077 --> 00:07:31,078
forehead forward I should watch how that
goes

120
00:07:31,087 --> 00:07:34,162
so weekend drawn expression tree

121
00:07:35,062 --> 00:07:39,063
that evaluates the operator operands

122
00:07:39,072 --> 00:07:43,133
up a college pressions and the operand
some expressions within

123
00:07:44,033 --> 00:07:48,077
to remember the rule for evaluating our
college freshman

124
00:07:48,077 --> 00:07:51,118
first you evaluate the operator

125
00:07:52,018 --> 00:07:55,100
which in this case is max the name

126
00:07:56,000 --> 00:08:00,199
refers to the function which minimize

127
00:08:00,199 --> 00:08:03,750
then we evaluate the operands

128
00:08:03,075 --> 00:08:08,118
first operand looks like that and we
have to apply our pool

129
00:08:09,018 --> 00:08:12,627
for evaluating call expressions again
evaluate the operator

130
00:08:12,789 --> 00:08:16,811
evaluate the operands miss operands
complex

131
00:08:17,009 --> 00:08:20,009
so we evaluated she refers to min

132
00:08:20,009 --> 00:08:23,910
you see that here in the environment
diagram h1n 5

133
00:08:23,091 --> 00:08:27,169
is another call expression we evaluate
that my first evaluating the operator

134
00:08:28,069 --> 00:08:32,028
age is the max function 1854 1.5

135
00:08:32,649 --> 00:08:36,725
and so the max at 1&5 is fuck

136
00:08:37,409 --> 00:08:40,830
now and take them in a5

137
00:08:40,083 --> 00:08:43,092
and three and we get 3

138
00:08:43,839 --> 00:08:47,290
now we're gonna take the max up to you
and three

139
00:08:47,029 --> 00:08:50,448
and look at three and they'll take them
in up three

140
00:08:50,709 --> 00:08:53,910
and for and we will get 3

141
00:08:53,091 --> 00:08:58,091
which is the value the whole thing
congratulations to be picked

142
00:08:58,091 --> 00:08:58,116
three

